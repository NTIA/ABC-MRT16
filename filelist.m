function [L file_numbers]=filelist(N,condition,fname)
%Usage: [L file_numbers]=filelist(N,condition,fname)
%This function creates a list of .wav filenames to be used by ABC_MRT.m,
%ABC-MRT16.m, or in the associated data acquisition (playing and 
%recording .wav files - an example is in playrec.m).
%
%The most thorough testing will use all 1200 available files.
%But if that is prohibitive then one needs a shorter list of files to use.
%filelist.m produces lists of any length from 16 to 1200.
%In fact, there is just one master list that is truncated to give the
%desired number of files.  That master list was formed for good truncation
%properties.  That is, the ABC-MRT or ABC-MRT16 scores for shorter lists
%converge nicely to the results for the full (1200 file) list.  This is 
%related to the fact that the truncated lists are balanced.
%
% - N is the number of .wav files in the list, 16<=N<=1200
%
% - condition will be rounded to the nearest integer and then will become
%   the condition number in the filename, 0<=condition<=99, or 
%   condition=-1 for original.
%
% - fname is an optional string.  If present it will cause the creation
%   of two files: fname.mat will contain the Matlab variable L and 
%   fname.txt will be a text file with one filename per line.  These may be
%   useful for scripting the data acquisition.
%
% - L is an N by 1 cell array of filenames
%
% - file_numbers is a N by 1 vector of file numbers. These numbers relate 
%   the files generated by filelist.m to the original ordering of the files.
%   In the original ordering files 1 to 300 are for female 1, files 301 to
%   600 are for female 3, files 601 to 900 are for male 3, and files 901
%   to 1200 are for male 4.  Within each block of 300 files the original
%   order covers all 6 words for each of 50 lists.  So files 1 to 6 are
%   for the six words of list 1, and files 296 to 300 are for the 6 words of
%   list 50.


talkers={'F1' 'F3' 'M3' 'M4'};
condition=round(condition);

if N<16 || 1200< N
    error('N must statisfy 16 <= N <= 1200')
end

if condition==-1
    ptr=1;
    L={};
    for talker=1:4
        for list=1:50
            liststring=num2str(list);
            for word=1:6
                L{ptr}=[talkers{talker},'_b',liststring,'_w',num2str(word),'_orig.wav'];
                ptr=ptr+1;
            end
        end
    end
elseif 0 <= condition && condition <=99
    ptr=1;
    L={};
    condstring=pad2(num2str(condition),2);
    for talker=1:4
        for list=1:50
            liststring=pad2(num2str(list),2);
            for word=1:6
                L{ptr}=['C',condstring,'/',talkers{talker},'_b',liststring,'_w',num2str(word),'_c',condstring,'.wav'];
                ptr=ptr+1;
            end
        end
    end
else
    error('Condition number must be 0 to 99, or -1 for original')
end
load fileorder
L=L(fileorder(1:N))';
file_numbers=fileorder(1:N);

if nargin==3
    save(fname,'L')
    fid = fopen([fname,'.txt'], 'w');
    for i=1:N
        fprintf(fid, '%s \r\n', L{i});
    end
    fclose(fid);
end


function y=pad2(x,len)
%This function pads a string stored in a row or column vector x
%with leading zeros to get the desired length, specified by len.

if ischar(x)~=1, error('Input to pad2.m is not a string'), end
if min(size(x))~=1, error('Input to pad.m is not a vector'), end
npad=len-length(x);
if npad<0, error('Desired length is less than current length in pad2.m'), end

zeds=char(48*ones(1,npad));	%48 is the ascii code for zero
[m,~]=size(x);
if m==1
	y=[zeds,x];		%Row vector case
else
	y=[zeds';x];		%Column vector case
end